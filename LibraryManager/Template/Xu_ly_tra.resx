<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTK.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAJnSURBVEhLrZZNa1NBGIUvfqCICoJfK7sQ8dt1cRWQUrNUjPkOIYsIippKa7fxp3TTYrH2D7ip
        ihRERNsg+CNErV2k1NbnXE6kJE3uTbkHDpl55z3nnbl3Zm6Cfshms+cLhcI0XCwWix9Et59rzGl7R7lc
        vozZa7gFt/tQYwv5fP6SZcOhVCrdx2DdZiuwgdlVeFJkEtdY1QTxlnP+wHuWx4MEUDNtw0eZTGa/h3qg
        MQo+IW9DGtp3PTQYrOQiAs2uTXvM4UhQYFwauEb7gsP9QaLeyTZFHjgUG+geSkuhVw7tDs1EiXCl2Wzu
        czg29BjR6p1tDdyNFJp2ocfunwgHhgDahjzQTjrUCxJeutAV918MuzI01+XBo59zqBcMvlNSrVY7pj7t
        99rS4WBMoDkuD/jWoV7IWEk866Puf6d4MxyMCTTRhTCdd1Ln0b2BP1nVmTAhBnSQ5THw0fECddKV9Mz9
        uvpwqVqtHg6TIoB2yh5PHeoFxp3t3dJWrdfrB2l/dmw56gJNpVIHyPsGB29vgaTwwMKG+pVK5Rztr461
        mcwMs9U9OEp7JBQZ9CeVx+/gAytg0rmCNhCMK+aVleACsY9wEU4QPxKKALrbcBOuMxZ9BQkY7uVS3YRa
        9Voul7vJBrqhCTqtPxDcgb8sjvxMsJLf/P5w+69+4SfyTtuyPzAaQTSHIOrDN6t3SW4KTXfuaqxiQtxP
        Of1RuLPI/2LDnMVIpNPpQ6zqyy6Fki/GwT6Laefz3s1WosVkJtOuIiFZ8bzTkoGLrXYXgstOSQ7abRjv
        LKY/MGkPJwsO9CnMZ+ESvBUEQfAPTnHER/zscDkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnCapnhat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAHYSURBVEhL3VU7SwNBGLxGC7GxUREUX63YiRArAzYKghIuyV1CqpQ29iKWCnY+O3+ERGxs7FIb
        RTAQH2AhJjYigo/51kluPXZDTlI5MOzufN/MJd9tiPP/4HneAlgGv5rwEVylJRpgvNWCbLyUNZ1Ob9DW
        OkJBRiaTyQGs17L3fX+d1tagB9kofZlMphf7CznjIVvK3Ar0IBvZ6qRSqT6cS9Q3KTdHPaQZ2aqAcQ1D
        q4iOd7JC2Q49yEZ88hm2K7iuOwb9DnyiZIce9Ad+MsYOgykK2/6AAua+hFs0jrUHN2uEMXYYQkysgnFa
        oiEUZOIzOCG9uEGD2O+D99Rl3RNdhZmABlNogxjFIvviYE2vaaxiXLMqMAxDc4MIP5Ue3v0X6gUwxl92
        DDyhXstms0MqVAeLRuJlLksP1gOej5UpBNTUQ1DfpRSgHmZiLpfrZ4/MWr7RlDKFgNo0PRVKAVgwMp/P
        d0gPgt947lKmEBKJRDc9r5QC1MNMlDmz54qaD5aVUQNGM8l6iVIAiOrrmwjjvPRg3dZ1ZdQA7ZC1HUoB
        IMpf5gMbfhGjOWKPXNGGrowARtOJ8xr1d/SPshQNMN8wRHhGWd5NkdoH9h7l9gHB56C8n7kfxXG+AchU
        QBj+ymvWAAAAAElFTkSuQmCC
</value>
  </data>
</root>